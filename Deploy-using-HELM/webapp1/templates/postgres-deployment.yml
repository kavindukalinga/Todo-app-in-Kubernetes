---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.db.svcName }}  # pgdb
  labels:
    app: {{ .Values.db.appLabel }}
    tier: database
spec:
  ports:
    - port: 5432
  selector:
    app: {{ .Values.db.appLabel }}
    tier: database
---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: postgres-pv-claim # name of PVC essential for identifying the storage data
#   labels:
#     app: postgres
#     tier: database
# spec:
#   accessModes:
#     - ReadWriteMany   #This specifies the mode of the claim that we are trying to create.
#   resources:
#     requests:
#       storage: 100Mi   #This will tell kubernetes about the amount of space we are trying to claim.
# ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.db.appLabel }}
  labels:
    app: {{ .Values.db.appLabel }}
    tier: database
spec:
  selector: # mysql Pod Should contain same labels
    matchLabels:
      app: {{ .Values.db.appLabel }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels: # Must match 'Service' and 'Deployment' selectors
        app: {{ .Values.db.appLabel }}
        tier: database
    spec:
      containers:
        - name: {{ .Values.db.appLabel }}
          image: "{{ .Values.db.image.name }}:{{ .Values.db.image.tag }}"
          imagePullPolicy: {{ .Values.db.image.pullPolicy }}
          resources:
            limits:
              memory: "128Mi"
              cpu: "250m"
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: {{ .Values.secret.username }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: {{ .Values.secret.password }}
            - name: POSTGRES_DB # Setting Database Name from a 'ConfigMap'
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmap.name }}
                  key: name1
          ports:
            - containerPort: 5432
              name: {{ .Values.db.appLabel }}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-persistance-storage
      volumes:
        - name: postgres-persistance-storage
          persistentVolumeClaim:
            claimName: {{ .Values.db.pvc }}